version: "3.4"
services:
  web:
    image: farfetchoss/maestro:0.5.0
    container_name: maestroweb

    environment:
      MAESTRO_PORT: 5000
      LOG_LEVEL: INFO
      SCHEDULER_ENABLED: "True"
      GUNICORN_WORKERS: 4
      GUNICORN_THREADS: 16
      MONGODB_HOST: maestromongodb
    ports:
      - 5000:5000
    networks:
      - default
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'curl http://maestroweb:5000'
      interval: 2s
      timeout: 3s
      retries: 10

  agent:
    image: farfetchoss/maestro-agent:0.5.0
    container_name: maestroagent_client
    environment:
      MAESTRO_API_HOST: http://maestroweb:5000
      JMETER_IMAGE_BASE_REPO: farfetchoss/maestro-agent
      JMETER_IMAGE_BASE_VERSION: 0.5.0
      JMETER_CONTAINER_NAME: maestrojmeter_client
      AGENT_HOST: agent.maestro.net
      HOST_MOUNT_DIR: /tmp/maestrojmeter
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /tmp/maestrojmeter
        target: /tmp/maestrojmeter
    networks:
      - default
    depends_on:
      web:
        condition: service_healthy

  mongodb:
    image: mongo:4.4
    container_name: maestromongodb
    volumes:
      - mongodata:/data/db
    restart: always
    networks:
      - default
    healthcheck:
      test:
        - "CMD-SHELL"
        - mongo --eval 'db.runCommand("ping").ok' localhost:27017 --quiet
      interval: 2s
      timeout: 5s
      retries: 10

volumes:
  mongodata: null

networks:
  default: null
