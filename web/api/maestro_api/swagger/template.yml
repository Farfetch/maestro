basePath: /api

schemes:
  - "http"

paths:
  /agent:
    put:
      tags:
        - "Agent"
      summary: "Create/Update Agent object by hostname"
      description: ""
      operationId: "createOrUpdateAgent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              hostname:
                type: string
                description: "Agent hostanme"
              ip:
                type: string
                description: "Agent IP"
            required:
              - hostname
              - ip
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
  /agent/{agent_id}:
    get:
      tags:
        - "Agent"
      summary: "Get Agent object by ID"
      description: ""
      operationId: "getAgentById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: agent_id
          description: "Agent unique identifier"
          required: true
          type: string
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    put:
      tags:
        - "Agent"
      summary: "Update Agent object by ID"
      description: ""
      operationId: "updateAgentById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: agent_id
          description: "Agent unique identifier"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              agent_status:
                $ref: "#/components/schemas/AgentStatus"
            required:
              - agent_status
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
        404:
          description: "Not found"
  /agents:
    get:
      tags:
        - "Agent"
      summary: "Get all Agent objects"
      description: ""
      operationId: "getAllAgents"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Agents"
          description: "Returns list of Agent objects"

  /agent_log:
    post:
      tags:
        - "AgentLog"
      summary: "Create AgentLog object"
      description: ""
      operationId: "createAgentLog"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "AgentLog input params to create object"
          required: true
          schema:
            properties:
              agent_id:
                type: string
                description: "Agent unique ID"
              log_message:
                type: string
                description: "AgentLog message"
              level:
                $ref: "#/components/schemas/AgentLogLevel"
            required:
              - agent_id
              - log_message
            additionalProperties: False
      responses:
        "200":
          schema:
            $ref: "#/definitions/AgentLog"
          description: "Returns single AgentLog object"
        "400":
          description: Bad request"
  /agent_logs:
    get:
      tags:
        - "AgentLog"
      summary: "Get list of AgentLog objects"
      description: ""
      operationId: "getAllAgentLogs"
      produces:
        - "application/json"
      parameters:
        - name: "agent_ids"
          in: "query"
          description: "Filter by Agent ID"
          collectionFormat: multi
          type: array
          items:
            type: string
        - name: "date_from"
          in: "query"
          description: "Filter by Date from"
          required: true
          type: string
          format: datetime
        - in: query
          name: sort
          description: "Sort by specific field. Default: `-created_at`"
          type: string
      responses:
        "200":
          schema:
            $ref: "#/definitions/AgentLogs"
          description: "Returns list of AgentLog objects"
        "400":
          description: "Bad request"

  /custom_data:
    get:
      tags:
        - "Custom Data"
      summary: "Get all CustomData objects"
      description: ""
      operationId: "getAllCustomData"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomData"
          description: "Returns list of CustomData objects"
    post:
      tags:
        - "Custom Data"
      summary: "Create new CustomData object"
      description: ""
      operationId: "createCustomData"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: formData
          name: custom_data_file
          description: "Custom data CSV file"
          required: true
          type: file
        - in: formData
          name: title
          description: "Custom data file title"
          required: true
          type: string
        - in: formData
          name: name
          description: "Unique custom data name"
          required: true
          type: string
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomDataSingle"
          description: "Returns single CustomData object"
  /custom_data/{custom_data_id}:
    get:
      tags:
        - "Custom Data"
      summary: "Get CustomData object by ID"
      description: ""
      operationId: "getCustomDataById"
      parameters:
        - in: path
          name: custom_data_id
          description: "Custom data ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomDataSingle"
          description: "Returns single CustomData object"
    /custom_data/{custom_data_id}/download:
      get:
        tags:
          - "Custom Data"
        summary: "Download CustomData file by ID"
        description: ""
        operationId: "downloadCustomDataFileById"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: path
            name: custom_data_id
            description: CustomData object ID
            required: true
            type: string
        responses:
          "200":
            description: CustomData CSV file
            content:
              application/csv:
              schema:
                type: string
                format: binary

  /events:
    get:
      tags:
        - "Event"
      summary: "Get all Event objects"
      description: ""
      operationId: "getAllEvents"
      produces:
        - "application/json"
      parameters:
        - name: "event_status"
          in: "query"
          description: "Filter by EventStatus"
          required: false
          $ref: "#/components/schemas/EventStatus"
        - name: "event_type"
          in: "query"
          description: "Filter by EventType"
          required: false
          $ref: "#/components/schemas/EventType"
        - name: "agent_id"
          in: "query"
          description: "Filter by Agent ID"
          required: false
          type: string
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of Event objects"
        400:
          description: "Bad request"
  /event/{event_id}:
    put:
      tags:
        - "Event"
      summary: "Update Event object by ID"
      description: ""
      operationId: "updateEventById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "event_status"
          in: "body"
          required: true
          schema:
            properties:
              event_status:
                $ref: "#/components/schemas/EventStatus"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of Event objects"
        400:
          description: "Bad request"

  /run:
    post:
      tags:
        - "Run"
      summary: "Create Run object"
      description: ""
      operationId: "createRun"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create Run object based on configuration ID"
          required: true
          schema:
            properties:
              run_configuration_id:
                type: string
                description: "Run Configuration ID"
            required:
              - run_configuration_id
      responses:
        200:
          schema:
            $ref: "#/definitions/Runs"
          description: "Returns list of Run objects"
        400:
          description: "Bad request"
  /run/{run_id}:
    get:
      tags:
        - "Run"
      summary: "Get Run object by ID"
      description: ""
      operationId: "getRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns single Run object"
        404:
          description: Run not found
    delete:
      tags:
        - "Run"
      summary: "Delete Run object with all related entities"
      description: ""
      operationId: "deleteRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns deleted Run object"
        404:
          description: Run not found
    put:
      tags:
        - "Run"
      summary: "Update Run object by ID"
      description: "At least of the input params is required."
      operationId: "updateRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique identifier"
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "Run input params to be updated"
          required: true
          schema:
            properties:
              run_status:
                $ref: "#/components/schemas/RunStatus"
              notes:
                type: string
                description: "Run Notes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns single Run object"
        404:
          description: Run not found
  /runs:
    get:
      tags:
        - "Run"
      summary: "Get all Run objects"
      description: ""
      operationId: "getAllRuns"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Runs"
          description: "Returns list of Run objects"

  /run_agent:
    put:
      tags:
        - "RunAgent"
      summary: "Update RunAgent object"
      description: ""
      operationId: "updateRunObject"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "RunAgent input data to update"
          required: true
          schema:
            properties:
              run_id:
                type: string
                description: "Run ID"
              agent_id:
                type: string
                description: "Agent ID"
              error_message:
                type: string
                description: "Error message during test execution"
              agent_status:
                $ref: "#/components/schemas/RunAgentStatus"
            required:
              - run_id
              - agent_id
              - agent_status
      responses:
        200:
          schema:
            $ref: "#/definitions/RunAgent"
          description: "Returns Updated RunAgent object "
        400:
          description: "Bad request"

  /run_agents:
    get:
      tags:
        - "RunAgent"
      summary: "Get list of RunAgent objects"
      description: ""
      operationId: "getAllRunAgents"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "run_id"
          in: "query"
          description: "Filter by Run ID"
          required: False
          type: string
        - name: "agent_id"
          in: "query"
          description: "Filter by Agent ID"
          required: False
          type: string
        - name: "agent_status"
          in: "query"
          description: "Filter by RunAgentStatus"
          required: False
          type: string
          $ref: "#/components/schemas/RunAgentStatus"

      responses:
        200:
          schema:
            $ref: "#/definitions/RunAgents"
          description: "Returns Updated RunAgent object "
        400:
          description: "Bad request"

  /run_configuration:
    post:
      tags:
        - "Run Configuration"
      summary: "Create RunConfiguration object"
      description: ""
      operationId: "createRunConfiguration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "RunConfiguration input params to create new object"
          required: true
          schema:
            properties:
              run_plan_id:
                type: string
                description: "Run Plan identifier"
              client_agent_id:
                type: string
                description: "Client Agent identifier"
              server_agent_ids:
                type: array
                description: "List of server Agents IDs should be used in test"
                items:
                  type: string
              custom_data_ids:
                type: array
                description: "List of CustomData IDs should be used in test"
                items:
                  type: string
              hosts:
                type: array
                description: "List of Hosts should be used in test"
                items:
                  type: object
                  properties:
                    host:
                      type: string
                    ip:
                      type: string
                  required:
                    - host
                    - ip
              custom_properties:
                type: array
                description: "List of Custom Properties should be used in test"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                    - host
                    - ip
              load_profile:
                type: array
                description: "List of Load profile configuration items"
                items:
                  type: object
                  properties:
                    start:
                      type: number
                    end:
                      type: number
                    duration:
                      type: number
                  required:
                    - start
                    - end
                    - duration
            required:
              - run_plan_id
              - client_agent_id
              - server_agent_ids
      responses:
        200:
          schema:
            $ref: "#/definitions/RunConfiguration"
          description: "Returns list of RunConfiguration objects"
        400:
          description: "Bad request"
  /run_configuration/{run_configuration_id}:
    get:
      tags:
        - "Run Configuration"
      summary: "Get RunConfiguration object by ID"
      description: ""
      operationId: "getRunConfigurationById"
      parameters:
        - in: path
          name: run_configuration_id
          description: "RunConfiguration unique identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunConfiguration"
          description: "Returns single RunConfiguration object"
        404:
          description: RunConfiguration not found
    delete:
      tags:
        - "Run Configuration"
      summary: "Delete RunConfiguration by ID"
      description: ""
      operationId: "deleteRunConfigurationById"
      parameters:
        - in: path
          name: run_configuration_id
          description: "RunConfiguration unique identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunConfiguration"
          description: "Returns single RunConfiguration object"
        404:
          description: RunConfiguration not found
    put:
      tags:
        - "Run Configuration"
      summary: "Update RunConfiguration object based on ID"
      description: ""
      operationId: "updateRunConfiguration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "RunConfiguration input params to update object"
          required: true
          schema:
            properties:
              run_plan_id:
                type: string
                description: "Run Plan ID"
              client_agent_id:
                type: string
                description: "Client Agent ID"
              server_agent_ids:
                type: array
                description: "List of server Agent identfiers to be used in the test"
                items:
                  type: string
              custom_data_ids:
                type: array
                description: "List of CustomData IDs to be used in the test"
                items:
                  type: string
              hosts:
                type: array
                description: "List of Hosts to be used in the test"
                items:
                  type: object
                  properties:
                    host:
                      type: string
                    ip:
                      type: string
                  required:
                    - host
                    - ip
              custom_properties:
                type: array
                description: "List of CustomProperties objects to be used in the test"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                    - host
                    - ip
              load_profile:
                type: array
                description: "List of LoadProfile objects"
                items:
                  type: object
                  properties:
                    start:
                      type: number
                    end:
                      type: number
                    duration:
                      type: number
                  required:
                    - start
                    - end
                    - duration
            required:
              - run_plan_id
              - client_agent_id
              - server_agent_ids
      responses:
        200:
          schema:
            $ref: "#/definitions/RunConfiguration"
          description: "Returns list of Run objects"
        400:
          description: "Bad request"
  /run_configurations:
    get:
      tags:
        - "Run Configuration"
      summary: "Returns list of RunConfiguration objects"
      description: ""
      operationId: "getAllRunConfigurations"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunConfigurations"
          description: "Returns list of RunConfiguration objects"

  /run_plan:
    post:
      tags:
        - "Run Plan"
      summary: "Create RunPlan object"
      description: ""
      operationId: "createRunPlan"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: formData
          name: run_plan
          description: "RunPlan JMeter JMX file"
          required: true
          type: file
        - in: formData
          name: title
          description: "RunPlan file title"
          required: true
          type: string
      responses:
        "200":
          schema:
            $ref: "#/definitions/RunPlan"
          description: "Returns single RunPlan object"
  /run_plan/{run_plan_id}:
    get:
      tags:
        - "Run Plan"
      summary: "Get RunPlan object by ID"
      description: ""
      operationId: "getRunPlanById"
      parameters:
        - in: path
          name: run_plan_id
          description: "RunPlan unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunPlan"
          description: "Returns single RunPlan object"
        404:
          description: RunPlan not found
  /run_plan/{run_plan_id}/download:
    get:
      tags:
        - "Run Plan"
      summary: "Download JMeter JMX file by ID"
      description: ""
      operationId: "downloadRunPlanById"
      parameters:
        - in: path
          name: run_plan_id
          description: "RunPlan ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunPlan"
          description: "Returns RunPlan file to download"
        404:
          description: RunPlan not found
  /run_plans:
    get:
      tags:
        - "Run Plan"
      summary: "Get list of RunPlan objects"
      description: ""
      operationId: "getAllRunPlans"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunPlans"
          description: "Returns list of RunPlan objects"

  /run_status/{run_id}/start:
    post:
      tags:
        - "Run Status"
      summary: "Start running test"
      description: ""
      operationId: "startRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found

  /run_status/{run_id}/restart:
    post:
      tags:
        - "Run Status"
      summary: "Restart running test"
      description: ""
      operationId: "restartRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found

  /run_status/{run_id}/finish:
    post:
      tags:
        - "Run Status"
      summary: "Finish running test"
      description: ""
      operationId: "finishRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found
  /run_status/{run_id}/stop:
    post:
      tags:
        - "Run Status"
      summary: "Stop running test"
      description: ""
      operationId: "stopRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found

  /run_metrics/{run_id}:
    post:
      tags:
        - "Run Metric"
      summary: "Create list of RunMetric objects"
      description: ""
      operationId: "createRunMetrics"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "RunMetric input params to be updated"
          required: true
          schema:
            properties:
              metrics:
                type: object
                properties:
                  datetime:
                    type: string
                    format: date-time
                  elapsed:
                    type: number
                  label:
                    type: string
                  responseCode:
                    type: number
                  responseMessage:
                    type: string
                  threadName:
                    type: string
                  dataType:
                    type: string
                  success:
                    type: boolean
                  failureMessage:
                    type: string
                  bytes:
                    type: number
                  sentBytes:
                    type: number
                  grpThreads:
                    type: number
                  allThreads:
                    type: number
                  url:
                    type: string
                  latency:
                    type: number
                  idleTime:
                    type: number
                  connect:
                    type: number
              required:
                - datetime
                - elapsed
                - label
                - responseCode
                - responseMessage
                - threadName
                - success
                - failureMessage
                - bytes
                - sentBytes
                - grpThreads
                - allThreads
                - url
                - latency
                - idleTime
                - connect
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            type: object
            properties:
              metrics_count:
                type: number
          description: "Returns count of metrics that where created"
        404:
          description: Run not found
    get:
      tags:
        - "Run Metric"
      summary: "Get list of RunMetric objects"
      description: ""
      operationId: "getAllRunMetrics"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
        - in: "query"
          name: time_interval
          description: "Interval to group metric values"
          default: 15
          required: false
        - in: "query"
          name: show_labels
          description: "Flag to return results based on label"
          required: false
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/RunMetrics"
          description: "Returns list of RunMetric objects"
        404:
          description: Run not found
  /run_metrics/{run_id}/download:
    get:
      tags:
        - "Run Metric"
      summary: "Download file with Run metrics"
      description: ""
      operationId: "downloadRunMetricsById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Returns 'metrics_{run_id}.csv' file"
        404:
          description: Run not found

components:
  schemas:
    AgentStatus:
      type: string
      enum:
        - CREATING
        - AVAILABLE
        - PROCESSING_EVENT
        - RUNNING_TEST
        - UNAVAILABLE
    AgentLogLevel:
      type: string
      enum:
        - DEBUG
        - INFO
        - ERROR
    EventStatus:
      name: event_status
      type: string
      enum:
        - PENDING
        - PROCESSING
        - FINISHED
    EventType:
      name: event_type
      type: string
      enum:
        - START_RUN
        - STOP_RUN
        - START_SERVER_AGENT
        - STOP_SERVER_AGENT
    RunStatus:
      type: string
      enum:
        - CREATING
        - PENDING
        - RUNNING
        - STOPPED
        - FINISHED
        - ERROR

    RunAgentStatus:
      type: string
      enum:
        - PROCESSING
        - RUNNING
        - FINISHED
        - ERROR

definitions:
  Agent:
    type: object
    properties:
      id:
        type: string
      agent_status:
        $ref: "#/components/schemas/AgentStatus"
      ip:
        type: string
      hostname:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Agents:
    type: array
    description: List of Agent objects.
    items:
      $ref: "#/definitions/Agent"
  AgentLog:
    type: object
    properties:
      id:
        type: string
      Agent_id:
        type: string
      log_message:
        type: string
      level:
        $ref: "#/components/schemas/AgentLogLevel"
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  AgentLogs:
    type: array
    description: List of AgentLog objects.
    items:
      $ref: "#/definitions/AgentLog"
  CustomDataSingle:
    type: object
    properties:
      id:
        type: string
      custom_data_file:
        type: string
      title:
        type: string
      name:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  CustomData:
    type: array
    description: List of CustomData objects.
    items:
      $ref: "#/definitions/CustomDataSingle"
  Event:
    type: object
    properties:
      id:
        type: string
      event_status:
        $ref: "#/components/schemas/EventStatus"
      event_type:
        $ref: "#/components/schemas/EventType"
      agent_id:
        type: string
      run_id:
        type: string
      started_at:
        type: string
        format: date-time
      finished_at:
        type: string
        format: date-time
  Events:
    type: array
    description: List of Events.
    items:
      $ref: "#/definitions/Event"
  RunPlan:
    type: object
    properties:
      id:
        type: string
      run_plan_file:
        type: string
      title:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RunPlans:
    type: array
    description: List of RunPlan objects.
    items:
      $ref: "#/definitions/RunPlan"
  Run:
    type: object
    properties:
      id:
        type: string
      run_status:
        $ref: "#/components/schemas/RunStatus"
      run_plan_id:
        type: string
      client_agent_id:
        type: string
      server_agent_ids:
        type: array
        items: string
      custom_data_ids:
        type: array
        items: string
      hosts:
        type: array
        items:
          type: object
          properties:
            host:
              type: string
            ip:
              type: string
          required:
            - host
            - ip
      load_profile:
        type: array
        items:
          type: object
          properties:
            start:
              type: number
            end:
              type: number
            duration:
              type: number
          required:
            - start
            - end
            - duration
      notes:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      started_at:
        type: string
        format: date-time
      finished_at:
        type: string
        format: date-time
  Runs:
    type: array
    description: List of Run objects.
    items:
      $ref: "#/definitions/Run"

  RunAgent:
    type: object
    properties:
      id:
        type: string
      run_id:
        type: string
      agent_id:
        type: string
      agent_status:
        $ref: "#/components/schemas/RunAgentStatus"
      agent_hostname:
        type: string
      error_message:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  RunAgents:
    type: array
    description: List of RunAgent objects.
    items:
      $ref: "#/definitions/RunAgent"

  RunConfiguration:
    type: object
    properties:
      id:
        type: string
      run_plan_id:
        type: string
      client_agent_id:
        type: string
      server_agent_ids:
        type: array
        items: string
      custom_data_ids:
        type: array
        items: string
      hosts:
        type: array
        items:
          type: object
          properties:
            host:
              type: string
            ip:
              type: string
          required:
            - host
            - ip
      load_profile:
        type: array
        items:
          type: object
          properties:
            start:
              type: number
            end:
              type: number
            duration:
              type: number
          required:
            - start
            - end
            - duration
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RunConfigurations:
    type: array
    description: List of RunConfiguration objects.
    items:
      $ref: "#/definitions/RunConfiguration"
  RunMetric:
    type: object
    properties:
      label:
        type: string
      latency_avg:
        type: number
      latency_p99:
        type: number
      latency_p95:
        type: number
      latency_p90:
        type: number
      latency_p75:
        type: number
      latency_p50:
        type: number
      min_datetime:
        type: string
        format: date-time
      max_datetime:
        type: string
        format: date-time
      success_count:
        type: number
      total_count:
        type: number
      responses:
        type: array
        items:
          type: object
          properties:
            response_code:
              type: number
            total_count:
              type: number
            success_count:
              type: number
            messages:
              type: array
              items:
                type: string
  RunMetrics:
    type: array
    description: List of RunMetric objects.
    items:
      $ref: "#/definitions/RunMetric"
