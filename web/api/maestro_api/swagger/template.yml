basePath: /api

schemes:
  - "http"

paths:
  /agent_log:
    post:
      tags:
        - "AgentLog"
      summary: "Create AgentLog object"
      description: ""
      operationId: "createAgentLog"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "AgentLog input params to creare object"
          required: true
          schema:
            properties:
              agent_id:
                type: string
                description: "Agent unique ID"
              log_message:
                type: string
                description: "AgentLog message"
              level:
                $ref: "#/components/schemas/AgentLogLevel"
            required:
              - agent_id
              - log_message
            additionalProperties: False
      responses:
        "200":
          schema:
            $ref: "#/definitions/AgentLog"
          description: "Returns single AgentLog object"
        "400":
          description: Bad request"

  /agent_logs:
    get:
      tags:
        - "AgentLog"
      summary: "Get lif of AgentLog objects"
      description: ""
      operationId: "getAllAgentLogs"
      produces:
        - "application/json"
      parameters:
        - name: "agent_ids"
          in: "query"
          description: "Filter by Agent ID"
          collectionFormat: multi
          type: array
          items:
            type: string
        - name: "date_from"
          in: "query"
          description: "Filter by Date from"
          required: true
          type: string
          format: datetime
        - in: query
          name: sort
          description: "Sort by specific field. Default: `-created_at`"
          type: string
      responses:
        "200":
          schema:
            $ref: "#/definitions/AgentLogs"
          description: "Returns list of AgentLog objects"
        "400":
          description: "Bad request"
  /agent:
    put:
      tags:
        - "Agent"
      summary: "Create/Update Agent object by hostname"
      description: ""
      operationId: "createOrUpdateAgent"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              hostname:
                type: string
                description: "Agent hostanme"
              ip:
                type: string
                description: "Agent IP"
            required:
              - hostname
              - ip
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
  /agent/{agent_id}:
    get:
      tags:
        - "Agent"
      summary: "Get Agent object by ID"
      description: ""
      operationId: "getAgentById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: agent_id
          description: "Agent unique identifier"
          required: true
          type: string
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
        404:
          description: "Not found"
    put:
      tags:
        - "Agent"
      summary: "Update Agent object by ID"
      description: ""
      operationId: "updateAgentById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: agent_id
          description: "Agent unique identifier"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            properties:
              agent_status:
                $ref: "#/components/schemas/AgentStatus"
            required:
              - agent_status
      responses:
        200:
          schema:
            $ref: "#/definitions/Agent"
          description: "Returns single Agent object"
        400:
          description: "Bad request"
        404:
          description: "Not found"
  /agents:
    get:
      tags:
        - "Agent"
      summary: "Get all Agent objects"
      description: ""
      operationId: "getAllAgents"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Agents"
          description: "Returns list of Agent objects"

  /custom_data:
    get:
      tags:
        - "Custom Data"
      summary: "Get all CustomData objects"
      description: ""
      operationId: "getAllCustomData"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomData"
          description: "Returns list of CustomData objects"
    post:
      tags:
        - "Custom Data"
      summary: "Create new CustomData object"
      description: ""
      operationId: "createCustomData"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: formData
          name: custom_data_file
          description: "Custom data CSV file"
          required: true
          type: file
        - in: formData
          name: title
          description: "Custom data file title"
          required: true
          type: string
        - in: formData
          name: name
          description: "Unique custom data name"
          required: true
          type: string
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomDataSingle"
          description: "Returns single CustomData object"
  /custom_data/{custom_data_id}:
    get:
      tags:
        - "Custom Data"
      summary: "Get CustomData object by ID"
      description: ""
      operationId: "getCustomDataById"
      parameters:
        - in: path
          name: custom_data_id
          description: "Custom data ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          schema:
            $ref: "#/definitions/CustomDataSingle"
          description: "Returns single CustomData object"
    /custom_data/{custom_data_id}/download:
      get:
        tags:
          - "Custom Data"
        summary: "Download CustomData file by ID"
        description: ""
        operationId: "downloadCustomDataFileById"
        consumes:
          - "application/json"
        produces:
          - "application/json"
        parameters:
          - in: path
            name: custom_data_id
            description: CustomData object ID
            required: true
            type: string
        responses:
          "200":
            description: CustomData CSV file
            content:
              application/csv:
              schema:
                type: string
                format: binary

  /run:
    post:
      tags:
        - "Run"
      summary: "Create Run object"
      description: ""
      operationId: "createRun"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create Run object based on configuration ID"
          required: true
          schema:
            properties:
              run_configuration_id:
                type: string
                description: "Run Configuration ID"
            required:
              - run_configuration_id
      responses:
        200:
          schema:
            $ref: "#/definitions/Runs"
          description: "Returns list of Run objects"
        400:
          description: "Bad request"
  /run/{run_id}:
    get:
      tags:
        - "Run"
      summary: "Get Run object by ID"
      description: ""
      operationId: "getRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns single Run object"
        404:
          description: Run not found
    delete:
      tags:
        - "Run"
      summary: "Delete Run object with all related entities"
      description: ""
      operationId: "deleteRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run identifier"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns deleted Run object"
        404:
          description: Run not found
    put:
      tags:
        - "Run"
      summary: "Update Run object by ID"
      description: ""
      operationId: "updateRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique identifier"
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "Run input params to be updated"
          required: true
          schema:
            properties:
              run_status:
                $ref: "#/components/schemas/RunStatus"
            required:
              - run_status
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Run"
          description: "Returns single Run object"
        404:
          description: Run not found

  /runs:
    get:
      tags:
        - "Run"
      summary: "Get all Run objects"
      description: ""
      operationId: "getAllRuns"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Runs"
          description: "Returns list of Run objects"

  /run_status/{run_id}/start:
    post:
      tags:
        - "Run Status"
      summary: "Start running test"
      description: ""
      operationId: "startRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found
  /run_status/{run_id}/finish:
    post:
      tags:
        - "Run Status"
      summary: "Finish running test"
      description: ""
      operationId: "finishRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found
  /run_status/{run_id}/stop:
    post:
      tags:
        - "Run Status"
      summary: "Stop running test"
      description: ""
      operationId: "stopRunById"
      parameters:
        - in: path
          name: run_id
          description: "Run unique ID"
          required: true
          type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          schema:
            $ref: "#/definitions/Events"
          description: "Returns list of created Events"
        404:
          description: Run not found

components:
  schemas:
    AgentStatus:
      type: string
      enum:
        - CREATING
        - AVAILABLE
        - PROCESSING_EVENT
        - RUNNING_TEST
        - UNAVAILABLE
    AgentLogLevel:
      type: string
      enum:
        - DEBUG
        - INFO
        - ERROR
    RunStatus:
      type: string
      enum:
        - CREATING
        - PENDING
        - RUNNING
        - STOPPED
        - FINISHED

definitions:
  Agent:
    type: object
    properties:
      id:
        type: string
      agent_status:
        $ref: "#/components/schemas/AgentStatus"
      ip:
        type: string
      hostname:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Agents:
    type: array
    description: List of Agent objects.
    items:
      $ref: "#/definitions/Agent"
  AgentLog:
    type: object
    properties:
      id:
        type: string
      Agent_id:
        type: string
      log_message:
        type: string
      level:
        $ref: "#/components/schemas/AgentLogLevel"
      created_at:
        type: string  
        format: date-time
      updated_at:
        type: string
        format: date-time
  AgentLogs:
    type: array
    description: List of AgentLog objects.
    items:
      $ref: "#/definitions/AgentLog"
    CustomDataSingle:
    type: object
    properties:
      id:
        type: string
      custom_data_file:
        type: string
      title:
        type: string
      name:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  CustomData:
    type: array
    description: List of CustomData objects.
    items:
      $ref: "#/definitions/CustomDataSingle"
  Event:
    type: object
    properties:
      id:
        type: string
      event_status:
        type: string
        enum:
          - PENDING
          - PROCESSING
          - FINISHED
      event_type:
        type: string
        enum:
          - START_RUN
          - STOP_RUN
          - START_SERVER_AGENT
          - STOP_SERVER_AGENT
      agent_id:
        type: string
      test_run_id:
        type: string
      started_at:
        type: string
        format: date-time
      finished_at:
        type: string
        format: date-time
  Events:
    type: array
    description: List of Events.
    items:
      $ref: "#/definitions/Event"
  RunPlan:
    type: object
    properties:
      id:
        type: string
      run_plan_file:
        type: string
      title:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RunPlans:
    type: array
    description: List of RunPlan objects.
    items:
      $ref: "#/definitions/RunPlan"
  Run:
    type: object
    properties:
      id:
        type: string
      test_run_status:
        $ref: "#/components/schemas/RunStatus"
      run_plan_id:
        type: string
      client_agent_id:
        type: string
      server_agent_ids:
        type: array
        items: string
      custom_data_ids:
        type: array
        items: string
      hosts:
        type: array
        items:
          type: object
          properties:
            host:
              type: string
            ip:
              type: string
          required:
            - host
            - ip
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Runs:
    type: array
    description: List of Run objects.
    items:
      $ref: "#/definitions/Run"
  RunConfiguration:
    type: object
    properties:
      id:
        type: string
      run_plan_id:
        type: string
      client_agent_id:
        type: string
      server_agent_ids:
        type: array
        items: string
      custom_data_ids:
        type: array
        items: string
      hosts:
        type: array
        items:
          type: object
          properties:
            host:
              type: string
            ip:
              type: string
          required:
            - host
            - ip
      load_profile:
        type: array
        items:
          type: object
          properties:
            start:
              type: number
            end:
              type: number
            duration:
              type: number
          required:
            - start
            - end
            - duration
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  RunConfigurations:
    type: array
    description: List of RunConfiguration objects.
    items:
      $ref: "#/definitions/RunConfiguration"
