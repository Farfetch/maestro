name: Release

on:
  push:
    # TODO: move to on release https://github.com/softprops/action-gh-release
    # TODO: test workflow once more with first publishing version
    tags:
      - "v*.*.*"

jobs:
  web:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_REPOSITORY: maestro

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Set Env Variables
        run: |
          echo "DOCKER_HUB_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./web
          push: true
          tags: ${{ env.DOCKER_HUB_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_TAG }}
          cache-to: type=inline

  agent:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_REPOSITORY: maestro-agent

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Set Env Variables
        run: |
          echo "DOCKER_HUB_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./agent
          push: true
          tags: ${{ env.DOCKER_HUB_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_TAG }}
          cache-to: type=inline

  cli:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_REPOSITORY: maestro-cli

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Set Env Variables
        run: |
          echo "DOCKER_HUB_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./cli
          push: true
          tags: ${{ env.DOCKER_HUB_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_TAG }}
          cache-to: type=inline

  jmeter:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_REPOSITORY: maestro-jmeter

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Set Env Variables
        run: |
          echo "DOCKER_HUB_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./jmeter
          push: true
          tags: ${{ env.DOCKER_HUB_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_TAG }}
          cache-to: type=inline
